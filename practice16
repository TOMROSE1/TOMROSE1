package day002;
import java.util.Arrays;
/*
 * 
Java 系统 API方法调用
Arrays 类，是数组的工具类，包含很多数组有关的工具方法
如：
ToString（）连接数组元素为字符串，方便数组内容输出
Equals 比较两个数组序列是否相等

 */
public class Demo3 {

	public static void main(String[] args) {
		int[] ary = {2,3,4,5};
		String str = Arrays.toString(ary);
		System.out.println(str);
		System.out.println(Arrays.toString(ary));
		
		char[] answer = {'A','B','c','D'};
		char[] littleM = {'A','B'};
		char[] other = {'A','B','C','D'};
		boolean pass = Arrays.equals(answer, littleM);
		System.out.println(pass);
		System.out.println(Arrays.equals(answer, other));
		
		ary = new int[] {5,10,7,13,6};
		Arrays.parallelSort(ary);
		System.out.println(Arrays.toString(ary));
	}

}

package day002;
/*
 * 实现方法，根据直角三角形直角边计算斜边的长度
勾股定理 a*a+b*b = c*c
已知ab计算c

 */
public class Demo2 {
	/*
	 * 根据直角三角形直角边计算斜边的长度
	 * @param a 一个直角边长度
	@param b 一个直角边长度
	@return 斜边长度

	 */
	public static double f(double a,double b) {
		double c = Math.sqrt(a*a+b*b);
		return c;
	}
	public static void main(String[] args) {
		System.out.println(f(3,4));
		System.out.println(f(6,8));
		System.out.println(f(8,12));

	}

}

package day002;
/*
 * 计算斐波那契数列的第n项
1，1，2，3，5，8，13
方法 Fibonacci（n） 参数是序号，返回是第n项的值
如：Fibonacci（1）返回1
：Fibonacci（2）返回1
：Fibonacci（6）返回8
：Fibonacci（7）返回13
算法：从第一项累加计算出第n项
1）	n=1或者n=2 返回1
规定 f 代表当前项 从第3项算起
规定f0=1 代表前两项
规定f1=1代表前一项
计算：I = 3~n
2）F = f1+f0
F3=2f1 = 1 f0=1
3）	将f0 = f1；f1=f；实现前两项的数值移动
Fo=1
F1=2
如果计算到第n项就停止
4）	返回到2


 */
public class Demo1 {
	public static int fibonacci(int n) 
	{
		if (n==1 || n==2) 
		{
			return 1;
		}
		int f= 0;
		int f1 = 1;
		int f0 = 1;
		for(int i = 3;i<=n;i++) 
		{
			f = f1+f0;
			f0 = f1;
			f1 = f;
		}
		return f;
	}
	public static void main(String[] args) {
		System.out.println(fibonacci(6));

	}

}

package day002;

public class Day1 {

	public static void main(String[] args) {
		int a = Math.max(2, 3);
		System.out.println(a);
	}

}
